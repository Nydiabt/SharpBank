// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SharpBank.API.Models;

namespace SharpBank.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SharpBank.Models.Account", b =>
                {
                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountNumber");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            AccountNumber = "001",
                            Balance = 0m,
                            UserName = "Shriram"
                        },
                        new
                        {
                            AccountNumber = "201",
                            Balance = 0m,
                            UserName = "Vijith"
                        },
                        new
                        {
                            AccountNumber = "301",
                            Balance = 0m,
                            UserName = "Sagar"
                        },
                        new
                        {
                            AccountNumber = "401",
                            Balance = 0m,
                            UserName = "Balaji"
                        });
                });

            modelBuilder.Entity("SharpBank.Models.Bank", b =>
                {
                    b.Property<string>("IFSC")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IFSC");

                    b.ToTable("Bank");

                    b.HasData(
                        new
                        {
                            IFSC = "001",
                            BankName = "Yaxis"
                        },
                        new
                        {
                            IFSC = "002",
                            BankName = "YesBI"
                        },
                        new
                        {
                            IFSC = "003",
                            BankName = "FDHC"
                        },
                        new
                        {
                            IFSC = "004",
                            BankName = "YCYCY"
                        });
                });

            modelBuilder.Entity("SharpBank.Models.Transaction", b =>
                {
                    b.Property<string>("TransactionID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RecepientAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecepientIFSC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderIFSC")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactionID");

                    b.ToTable("Transaction");

                    b.HasData(
                        new
                        {
                            TransactionID = "001",
                            Amount = 100.0m,
                            RecepientAccount = "001",
                            RecepientIFSC = "001",
                            SenderAccount = "001",
                            SenderIFSC = "001"
                        },
                        new
                        {
                            TransactionID = "002",
                            Amount = 100.0m,
                            RecepientAccount = "002",
                            RecepientIFSC = "002",
                            SenderAccount = "002",
                            SenderIFSC = "002"
                        },
                        new
                        {
                            TransactionID = "003",
                            Amount = 100.0m,
                            RecepientAccount = "003",
                            RecepientIFSC = "001",
                            SenderAccount = "001",
                            SenderIFSC = "003"
                        },
                        new
                        {
                            TransactionID = "004",
                            Amount = 100.0m,
                            RecepientAccount = "004",
                            RecepientIFSC = "004",
                            SenderAccount = "004",
                            SenderIFSC = "004"
                        },
                        new
                        {
                            TransactionID = "005",
                            Amount = 100.0m,
                            RecepientAccount = "001",
                            RecepientIFSC = "001",
                            SenderAccount = "001",
                            SenderIFSC = "001"
                        },
                        new
                        {
                            TransactionID = "006",
                            Amount = 100.0m,
                            RecepientAccount = "002",
                            RecepientIFSC = "003",
                            SenderAccount = "001",
                            SenderIFSC = "002"
                        },
                        new
                        {
                            TransactionID = "007",
                            Amount = 100.0m,
                            RecepientAccount = "003",
                            RecepientIFSC = "002",
                            SenderAccount = "003",
                            SenderIFSC = "003"
                        },
                        new
                        {
                            TransactionID = "008",
                            Amount = 100.0m,
                            RecepientAccount = "004",
                            RecepientIFSC = "004",
                            SenderAccount = "004",
                            SenderIFSC = "004"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
